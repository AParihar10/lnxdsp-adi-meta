From 5ba66d6bbdac4dea01761416dea2e6469b1ffb0a Mon Sep 17 00:00:00 2001
From: Greg Malysa <gmalysa@alumni.stanford.edu>
Date: Wed, 30 Nov 2022 15:33:50 -0500
Subject: [PATCH 2/2] Enable SHARC-ALSA demo, disabling most linux-based audio
 drivers and replacing remoteproc with adi rpmsg

---
 arch/arm64/boot/dts/adi/sc598-som-ezkit.dts  |  7 +-
 arch/arm64/boot/dts/adi/sc598-som.dtsi       | 32 +++++++++-
 arch/arm64/configs/sc598-som-ezkit_defconfig |  2 +-
 drivers/soc/adi/mach-sc5xx/sec.c             | 67 ++++++++++----------
 4 files changed, 69 insertions(+), 39 deletions(-)

diff --git a/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts b/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
index caf7bff0fccb..bdb9ee9aeca9 100644
--- a/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
+++ b/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
@@ -16,6 +16,7 @@ sound {
 			compatible = "sc5xx,asoc-card";
 			adi,cpu-dai = <&i2s4>;
 			adi,codec = <&adau1962>, <&adau1979>;
+			status = "disabled";
 		};
 	};
 };
@@ -193,12 +194,14 @@ gige-reset {
 	adau1979: adau1979@0x11 {
 		compatible = "adi,adau1979";
 		reg = <0x11>;
+		status = "disabled";
 	};
 
 	adau1962: adau1962@0x4 {
 		compatible = "adi,adau1962";
 		reg = <0x4>;
 		reset-gpios = <&ssw1 5 GPIO_ACTIVE_LOW>;
+		status = "disabled";
 	};
 };
 
@@ -280,11 +283,11 @@ dp83848: ethernet-phy@1 {
 &i2s4 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&sru_dai1>;
-	status = "okay";
+	status = "disabled";
 };
 
 &sru_ctrl_dai1 {
-	status = "okay";
+	status = "disabled";
 
 	sru_dai1: sru_dai1_mux {
 		route {
diff --git a/arch/arm64/boot/dts/adi/sc598-som.dtsi b/arch/arm64/boot/dts/adi/sc598-som.dtsi
index 74032f42f248..bb1357eee769 100644
--- a/arch/arm64/boot/dts/adi/sc598-som.dtsi
+++ b/arch/arm64/boot/dts/adi/sc598-som.dtsi
@@ -70,7 +70,7 @@ sharc0: core1-rproc@0x28240000 {
 			adi,verify = <1>;
 			adi,tru = <&tru>;
 			adi,tru-master-id = <135>; /* trigger master SOFT4 */
-			status = "okay";
+			status = "disabled";
 		};
 
 		sharc1: core2-rproc@0x28a40000 {
@@ -88,7 +88,33 @@ sharc1: core2-rproc@0x28a40000 {
 			adi,verify = <1>;
 			adi,tru = <&tru>;
 			adi,tru-master-id = <136>; /* trigger master SOFT5 */
-			status = "okay";
+			status = "disabled";
+		};
+
+		sharc0_rpmsg: core0-rpmsg@0x28240000 {
+				status = "okay";
+				compatible = "adi,rpmsg-SC598";
+				core-id = <1>;
+				adi,rcu = <&rcu>;
+				adi,rsc-table = <&rsc_tbl0>;
+				interrupts = <GIC_SPI 337 IRQ_TYPE_EDGE_RISING>; /* TRU0_SLV3 */
+				adi,tru = <&tru>;
+				adi,tru-master-id = <135>; /* trigger master SOFT4 */
+				vdev-vring = <&vdev0vrings>;
+				memory-region = <&vdev0buffer>;
+		};
+
+		sharc1_rpmsg: core1-rpmsg@0x28a40000 {
+				status = "okay";
+				compatible = "adi,rpmsg-SC598";
+				core-id = <2>;
+				adi,rcu = <&rcu>;
+				adi,rsc-table = <&rsc_tbl1>;
+				interrupts = <GIC_SPI 337 IRQ_TYPE_EDGE_RISING>; /* TRU0_SLV3 */
+				adi,tru = <&tru>;
+				adi,tru-master-id = <136>; /* trigger master SOFT5 */
+				vdev-vring = <&vdev1vrings>;
+				memory-region = <&vdev1buffer>;
 		};
 
 //		firmware {
@@ -225,7 +251,7 @@ &i2c1 {
 };
 
 &i2c2 {
-	status = "okay";
+	status = "disabled";
 	pinctrl-names = "default";
 	pinctrl-0 = <&i2c2_pins>;
 
diff --git a/arch/arm64/configs/sc598-som-ezkit_defconfig b/arch/arm64/configs/sc598-som-ezkit_defconfig
index a3f365518575..7f75b8ac54bc 100644
--- a/arch/arm64/configs/sc598-som-ezkit_defconfig
+++ b/arch/arm64/configs/sc598-som-ezkit_defconfig
@@ -298,7 +298,7 @@ CONFIG_REMOTEPROC=y
 CONFIG_ADI_REMOTEPROC=y
 CONFIG_RPMSG_CHAR=y
 CONFIG_RPMSG_QCOM_GLINK_RPM=y
-CONFIG_RPMSG_VIRTIO=y
+CONFIG_RPMSG_ADI=y
 CONFIG_EXTCON_USB_GPIO=y
 CONFIG_MEMORY=y
 CONFIG_IIO=y
diff --git a/drivers/soc/adi/mach-sc5xx/sec.c b/drivers/soc/adi/mach-sc5xx/sec.c
index 4bad868de617..1e8435c3d96d 100644
--- a/drivers/soc/adi/mach-sc5xx/sec.c
+++ b/drivers/soc/adi/mach-sc5xx/sec.c
@@ -33,11 +33,12 @@ struct adi_sec {
 };
 
 void adi_sec_writel(u32 val, struct adi_sec *rcu, int offset) {
-	writel(val, rcu->ioaddr + offset);
+//	writel(val, rcu->ioaddr + offset);
 }
 
 u32 adi_sec_readl(struct adi_sec *rcu, int offset) {
-	return readl(rcu->ioaddr + offset);
+//	return readl(rcu->ioaddr + offset);
+	return 0;
 }
 
 void sec_raise_irq(struct adi_sec *sec, unsigned int irq)
@@ -193,37 +194,37 @@ static int adi_sec_probe(struct platform_device *pdev) {
 
 	adi_sec->ioaddr = base;
 
-	/* Disable SYSCD_RESETb and clear RCU reset status */
-	adi_rcu_writel(0x00, adi_rcu, ADI_RCU_REG_CTL);
-	adi_rcu_writel(0x0f, adi_rcu, ADI_RCU_REG_STAT);
-
-	/* Reset SEC */
-	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_GCTL);
-	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_FCTL);
-
-	/* Initialize each core */
-	for (cores = 0; cores < adi_sec->cores; ++cores) {
-		adi_sec_writel(0x02, adi_sec,
-			ADI_SEC_REG_CCTL_BASE + (cores+1)*ADI_SEC_CCTL_SIZE);
-	}
-	udelay(100);
-
-	/* Enable SEC fault event */
-	adi_sec_writel(0x01, adi_sec, ADI_SEC_REG_GCTL);
-
-	/* ANOMALY 36100004 spurious external fault event occurs when FCTL is
-	 * re-programmed when active fault is not cleared
-	 */
-	adi_sec_writel(0xc0, adi_sec, ADI_SEC_REG_FCTL);
-	adi_sec_writel(0xc1, adi_sec, ADI_SEC_REG_FCTL);
-
-	/* Enable SYSCD_RESETb input */
-	adi_rcu_writel(0x100, adi_rcu, ADI_RCU_REG_CTL);
-
-#ifdef CONFIG_ADI_WATCHDOG
-	/* @todo verify sec watchdog event number, make device tree based */
-	sec_enable_ssi(adi_sec, 3, true, true);
-#endif
+//	/* Disable SYSCD_RESETb and clear RCU reset status */
+//	adi_rcu_writel(0x00, adi_rcu, ADI_RCU_REG_CTL);
+//	adi_rcu_writel(0x0f, adi_rcu, ADI_RCU_REG_STAT);
+//
+//	/* Reset SEC */
+//	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_GCTL);
+//	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_FCTL);
+//
+//	/* Initialize each core */
+//	for (cores = 0; cores < adi_sec->cores; ++cores) {
+//		adi_sec_writel(0x02, adi_sec,
+//			ADI_SEC_REG_CCTL_BASE + (cores+1)*ADI_SEC_CCTL_SIZE);
+//	}
+//	udelay(100);
+//
+//	/* Enable SEC fault event */
+//	adi_sec_writel(0x01, adi_sec, ADI_SEC_REG_GCTL);
+//
+//	/* ANOMALY 36100004 spurious external fault event occurs when FCTL is
+//	 * re-programmed when active fault is not cleared
+//	 */
+//	adi_sec_writel(0xc0, adi_sec, ADI_SEC_REG_FCTL);
+//	adi_sec_writel(0xc1, adi_sec, ADI_SEC_REG_FCTL);
+//
+//	/* Enable SYSCD_RESETb input */
+//	adi_rcu_writel(0x100, adi_rcu, ADI_RCU_REG_CTL);
+//
+//#ifdef CONFIG_ADI_WATCHDOG
+//	/* @todo verify sec watchdog event number, make device tree based */
+//	sec_enable_ssi(adi_sec, 3, true, true);
+//#endif
 
 	return 0;
 
-- 
2.34.1

